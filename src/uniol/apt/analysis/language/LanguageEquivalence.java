/*-
 * APT - Analysis of Petri Nets and labeled Transition systems
 * Copyright (C) 2012-2013  Members of the project group APT
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

package uniol.apt.analysis.language;

import java.util.List;

import uniol.apt.adt.ts.TransitionSystem;

/**
 * Check if two labelled transition systems accept the same prefix language.
 * @author Uli Schlachter
 */
public class LanguageEquivalence {
	/**
	 * No, you should not create instances of this class.
	 */
	private LanguageEquivalence() {
	}

	/**
	 * Check if two labelled transition systems accept the same language.
	 * @param lts1 The first LTS.
	 * @param lts2 The second LTS.
	 * @param all If true, all unique prefixes for words which aren't in both languages are found, else just one.
	 * @return A list of words that are only generated by one of the LTS.
	 */
	public static List<Word> checkLanguageEquivalence(TransitionSystem lts1, TransitionSystem lts2, boolean all) {
		// Step 1: Turn the LTS into DFA
		DeterministicFiniteAutomaton dfa1 = new DeterministicFiniteAutomaton(lts1);
		DeterministicFiniteAutomaton dfa2 = new DeterministicFiniteAutomaton(lts2);

		// Step 2: Minimize the DFA (optional, but likely(?) speeds up the following)
		dfa1 = dfa1.minimize();
		dfa2 = dfa2.minimize();

		// Step 3: Check if both DFA accept the same language
		return DeterministicFiniteAutomaton.checkAutomatonEquivalence(dfa1, dfa2, true);
	}
}

// vim: ft=java:noet:sw=8:sts=8:ts=8:tw=120
